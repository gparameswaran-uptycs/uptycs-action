name: Uptycs Vulnerability Scanner
description: Scans containers for known vulnerabilities
author: Uptycs
inputs:
  #############################################################################
  # Required Inputs
  #############################################################################
  uptycs-secret:
    description: Tenant-specific secret for authenticating to uptycs
    required: true
  ca-certificate:
    description: Tenant-specific certificate for authenticating to uptycs
    required: true
  osquery-flags:
    description: Flags file to be used by osquery
    required: true
  image-id:
    description: ID of the docker image to scan for vulnerabilities
    required: true
  #############################################################################
  # Optional inputs
  #############################################################################
  fatal-cvss-score:
    description: The CVSS score at which a detected vulnerability should fail the build
    required: false
    default: '8'
  tls-hostname:
    description: TLS URL for publishing results
    required: false
    default: 'uptycs.io'
runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
        docker run --rm --entrypoint=dnf uptycs/k8sosquery:5.3.0.10-Uptycs-Protect-202208052028 -y install yum
        docker run --rm --entrypoint=find uptycs/k8sosquery:5.3.0.10-Uptycs-Protect-202208052028 / -type f -name yum
        echo "rpm: $(docker run --rm --entrypoint=which uptycs/k8sosquery:5.3.0.10-Uptycs-Protect-202208052028 rpm)"
        echo "yum: $(docker run --rm --entrypoint=which uptycs/k8sosquery:5.3.0.10-Uptycs-Protect-202208052028 yum)"
    - shell: bash
      run: |
        mkdir .secret
        printf "${{ inputs.uptycs-secret }}" > .secret/uptycs.secret
        printf "${{ inputs.ca-certificate }}" > .secret/ca.crt
        printf "${{ inputs.osquery-flags }}" > .secret/osquery.flags
        docker build --progress=plain --no-cache --tag uptycs/image-scanner:${{ github.sha }}.local .
        docker run --rm --privileged \
          --pid host \
          --net host \
          --restart no \
          --volume /var/run/docker.sock:/var/run/docker.sock:ro \
          --volume /var/run/docker.pid:/var/run/docker.pid:ro \
          --volume `pwd`:/host \
          --volume $(which docker):/usr/bin/docker \
          --env FATAL_CVSS_SCORE=${{ inputs.fatal-cvss-score }} \
          --env IMAGE_ID=${{ inputs.image-id }} \
          --env CHROOT_DIR=/host \
          uptycs/image-scanner:${{ github.sha }}.local
    - shell: bash
      run: rm -rf .secret/ || true
